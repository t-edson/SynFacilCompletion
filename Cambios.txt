1.22 30/08/2020
====
Se adapta la librería para trabajar con Lazarus 

1.21 13/08/2018
====
Se corrige la inicialización de la bandera "SearchOnKeyUp".

1.20
====
Se crea la versión para nivelarse con la versión de 1.20, de Synfacilsyn.
Se crea el método TXpTreeElements.GetElementAt().
Se cea el método TFaOpenEvent.Clear().
Se eliminan algunos mensajes de advertencia al compilar.

1.19
====
Se mueve código de verifiación de tecla pulsada de TSynFacilComplet.MenuComplet_OnExecute()
a TSynFacilComplet.OpenCompletionWindow;
Se eliminan vKey y vShift, como variables globales.
Se cambia de nombre a utKey por UtfKey.
Se configura MenuComplet.AutoUseSingleIdent en FALSE, para evitar agregar un ítem 
adicional a la lista.
Se modifica el evento TFaOnLoadItems para que incluya la referencia al objeto 
TFaOpenEvent que hace la llamada.

1.18
====
Se configura para trabajar con SynFacilSyn 1.18.
Se corrige TFaCursorEnviron.InsertSequence(), para insertar espacios en blanco cuando
se quiere posicionar el cursor, más allá del límite de la línea actual.

1.17
====
Se configura para trabajar con SynFacilSyn 1.17.

1.15
====
Se cambia de nombre al método OnExecute por MenuComplet_OnExecute, para evitar confundir 
al manejador con el evento, y se define como virtual.
Se hace público OpenCompletionWindow().
Se mueve la función anidada FilterByChar() con alcane público para que pueda servir desde
fuera de la clase.
Se crea el evento TFaOpenEvent.OnLoadItems, para permitir realizar la carga dinámica de 
ítems en la lista de completado.
Se cambia de nombre al campo OpenPatterns por OpenEvents y se hace público.
Se cambia de nombre al campo CurOpenPat por CurOpenEve y se hace público.
Se crea la función FindOpenEvent().
Se crea el método TFaOpenEvent.AddAvail().
Se mejora el mensaje de error, cuando no se encuentra listas.
se amplia el conjunto de caracteres que pueden abrir la ventana de completado en:
TSynFacilComplet.MenuComplet_OnExecute().

1.14
====
* Se agrega la función de conversión AnsiString(), para forzar la conversión de las
cadenas WideString que vienen con FPC 3.0.


En esta versión solo se actualiza el código para trabajar mejor con la versión FPC 3.0
Se mantienen todas las funcionalidades y la compatibilidad, con las versiones anteriores.
